/*
 * NSX-T Manager API
 *
 * VMware NSX-T Manager REST API
 *
 * API version: 2.5.0.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package model

// The configuration for Internet protocol flow information export (IPFIX) and would be enabled on the switching module to collect flow information. 
type IpfixSwitchUpmProfile struct {
	// Link to this resource
	Self *SelfResourceLink `json:"_self,omitempty"`
	// The server will populate this field when returing the resource. Ignored on PUT and POST.
	Links []ResourceLink `json:"_links,omitempty"`
	// Schema for this resource
	Schema string `json:"_schema,omitempty"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected.
	Revision int32 `json:"_revision,omitempty"`
	// Indicates system owned resource
	SystemOwned bool `json:"_system_owned,omitempty"`
	// Defaults to ID if not set
	DisplayName string `json:"display_name,omitempty"`
	// Description of this resource
	Description string `json:"description,omitempty"`
	// Opaque identifiers meaningful to the API user
	Tags []Tag `json:"tags,omitempty"`
	// ID of the user who created this resource
	CreateUser string `json:"_create_user,omitempty"`
	// Protection status is one of the following: PROTECTED - the client who retrieved the entity is not allowed             to modify it. NOT_PROTECTED - the client who retrieved the entity is allowed                 to modify it REQUIRE_OVERRIDE - the client who retrieved the entity is a super                    user and can modify it, but only when providing                    the request header X-Allow-Overwrite=true. UNKNOWN - the _protection field could not be determined for this           entity. 
	Protection string `json:"_protection,omitempty"`
	// Timestamp of resource creation
	CreateTime int64 `json:"_create_time,omitempty"`
	// Timestamp of last modification
	LastModifiedTime int64 `json:"_last_modified_time,omitempty"`
	// ID of the user who last modified this resource
	LastModifiedUser string `json:"_last_modified_user,omitempty"`
	// Unique identifier of this resource
	Id string `json:"id,omitempty"`
	// All IPFIX profile types.
	ResourceType string `json:"resource_type"`
	// This priority field is used to resolve conflicts in logical ports/switch  which inherit multiple switch IPFIX profiles from NSGroups.  Override rule is : for multiple profiles inherited from NSGroups, the one with highest priority (lowest number) overrides others; the profile directly applied to logical switch overrides profiles inherited from NSGroup; the profile directly applied to logical port overides profiles inherited from logical switch and/or nsgroup;  The IPFIX exporter will send records to collectors of final effective profile only. 
	Priority int32 `json:"priority"`
	// Each IPFIX switching profile can have its own collector profile. 
	CollectorProfile string `json:"collector_profile"`
	// The time in seconds after a flow is expired if no more packets matching this flow are received by the cache. 
	IdleTimeout int32 `json:"idle_timeout,omitempty"`
	// The maximum number of flow entries in each exporter flow cache. 
	MaxFlows int64 `json:"max_flows,omitempty"`
	// An identifier that is unique to the exporting process and used to meter the Flows. 
	ObservationDomainId int64 `json:"observation_domain_id"`
	// The time in seconds after a flow is expired even if more packets matching this Flow are received by the cache. 
	ActiveTimeout int32 `json:"active_timeout,omitempty"`
	// It controls whether sample result includes overlay flow info. 
	ExportOverlayFlow bool `json:"export_overlay_flow,omitempty"`
	// Entities where the IPFIX profile will be enabled on. Maximum entity count of all types is 128. 
	AppliedTos *AppliedTos `json:"applied_tos,omitempty"`
	// The probability in percentage that a packet is sampled. The value should be  in range (0,100] and can only have three decimal places at most. The probability  is equal for every packet. 
	PacketSampleProbability float32 `json:"packet_sample_probability,omitempty"`
}
