/*
 * NSX-T Manager API
 *
 * VMware NSX-T Manager REST API
 *
 * API version: 2.5.0.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package model

// The deployment of a registered service. Service instance is instantiation of service. It is the most used type of instance. It is a default instance to be used when NSX handles lifecycle of appliance. Deployment and appliance related all the information is necessary.
type ServiceInstance struct {
	// Link to this resource
	Self *SelfResourceLink `json:"_self,omitempty"`
	// The server will populate this field when returing the resource. Ignored on PUT and POST.
	Links []ResourceLink `json:"_links,omitempty"`
	// Schema for this resource
	Schema string `json:"_schema,omitempty"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected.
	Revision int32 `json:"_revision,omitempty"`
	// Indicates system owned resource
	SystemOwned bool `json:"_system_owned,omitempty"`
	// Defaults to ID if not set
	DisplayName string `json:"display_name,omitempty"`
	// Description of this resource
	Description string `json:"description,omitempty"`
	// Opaque identifiers meaningful to the API user
	Tags []Tag `json:"tags,omitempty"`
	// ID of the user who created this resource
	CreateUser string `json:"_create_user,omitempty"`
	// Protection status is one of the following: PROTECTED - the client who retrieved the entity is not allowed             to modify it. NOT_PROTECTED - the client who retrieved the entity is allowed                 to modify it REQUIRE_OVERRIDE - the client who retrieved the entity is a super                    user and can modify it, but only when providing                    the request header X-Allow-Overwrite=true. UNKNOWN - the _protection field could not be determined for this           entity. 
	Protection string `json:"_protection,omitempty"`
	// Timestamp of resource creation
	CreateTime int64 `json:"_create_time,omitempty"`
	// Timestamp of last modification
	LastModifiedTime int64 `json:"_last_modified_time,omitempty"`
	// ID of the user who last modified this resource
	LastModifiedUser string `json:"_last_modified_user,omitempty"`
	// Unique identifier of this resource
	Id string `json:"id,omitempty"`
	// ServiceInstance is used when NSX handles the lifecyle of   appliance. Deployment and appliance related all the information is necessary. ByodServiceInstance is a custom instance to be used when NSX is not handling   the lifecycles of appliance/s. User will manage their own appliance (BYOD)   to connect with NSX. VirtualServiceInstance is a a custom instance to be used when NSX is not   handling the lifecycle of an appliance and when the user is not bringing   their own appliance. 
	ResourceType string `json:"resource_type"`
	// Failure policy of the service instance - if it has to be different from the service. By default the service instance inherits the FailurePolicy of the service it belongs to.
	OnFailurePolicy string `json:"on_failure_policy,omitempty"`
	// Transport to be used by this service instance for deploying the Service-VM. This field is to be set Not Applicable(NA) if the service only caters to functionality EPP(Endpoint Protection).
	TransportType string `json:"transport_type"`
	// The Service to which the service instance is associated.
	ServiceId string `json:"service_id,omitempty"`
	// Name of the deployment spec to be used by this service instance.
	DeploymentSpecName string `json:"deployment_spec_name"`
	// The deployment template to be used by this service instance. The attribute values specific to this instance can be added.
	InstanceDeploymentTemplate *DeploymentTemplate `json:"instance_deployment_template"`
	// Implementation to be used by this service instance for deploying the Service-VM.
	ImplementationType string `json:"implementation_type"`
	// Attachment point to be used by this service instance for deploying the Service-VM.
	AttachmentPoint string `json:"attachment_point"`
	// Instance Deployment Config contains the information to be injected during Service-VM deployment. This field is optional if the service only caters to functionality EPP(Endpoint Protection).
	InstanceDeploymentConfig *InstanceDeploymentConfig `json:"instance_deployment_config,omitempty"`
	// Deployment mode specifies where the partner appliance will be deployed in HA or non-HA i.e standalone mode.
	DeploymentMode string `json:"deployment_mode"`
	// List of resource references where service instance be deployed. Ex. Tier 0 Logical Router in case of N-S ServiceInsertion.
	DeployedTo []ResourceReference `json:"deployed_to"`
	// Id of the Service Deployment using which the instances were deployed. Its available only for instances that were deployed using service deployment API.
	ServiceDeploymentId string `json:"service_deployment_id,omitempty"`
}
